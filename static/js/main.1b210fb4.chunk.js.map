{"version":3,"sources":["redux/reducer/AuthReducer.js","redux/api/API.js","components/utils/forms/CreateForm.js","components/utils/forms/component/Input.js","serviceWorker.js","redux/store/store.js","components/header/Header.jsx","components/header/HeaderContainer.js","components/utils/suspense/SuspenseComponent.jsx","components/notFound/NotFound.jsx","App.js","index.js","redux/reducer/PostsReducer.js","components/auth/Auth.jsx","components/auth/AuthContainer.js","components/register/Register.jsx","components/register/RegisterContainer.js","redux/HOC/AuthRedirectHOK.js","components/utils/valodators/Valitators.js","components/utils/forms/component/formControl/FormControl.js"],"names":["initialState","token","userId","isAuth","isRegistered","toggleAuth","toggleAuthSuccess","errorToggleAuthSuccess","toggleRegister","toggleRegisterSuccess","errorToggleRegisterSuccess","authReducer","state","action","type","redirectFromRegister","redirectFromRegisterFalse","exitAccountDispatch","registerThunk","formData","dispatch","loginAPI","registerFromAPI","then","response","status","console","log","data","registerDispatch","catch","error","authThunk","authFormAPI","authDispatchTrue","instance","axios","baseURL","withCredentials","postsAPI","getPostsAPI","get","postAddAPI","post","postByIdAPI","id","editPostAPI","put","deletePostAPI","delete","createFrom","name","component","className","placeholder","validate","Input","props","input","restProps","meta","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","reducerPack","combineReducers","postsData","postsReducer","authData","form","formReducer","store","createStore","composeWithDevTools","applyMiddleware","thunkMiddleWare","withRouter","pathname","style","backgroundImage","defaultImageURL","postById","imageURL","title","description","to","onClick","HeaderContainer","params","postId","this","postsByIdThunk","React","Component","defaultProps","compose","connect","AuthRedirectHOK","SuspenseComponent","Spinner","animation","NotFound","PostsListContainer","lazy","PostsFromContainer","PostEditContainer","PostItemContainer","AppContainer","fallback","exact","path","render","MainApp","ReactDOM","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","contentType","indexOf","ready","unregister","reload","checkValidServiceWorker","posts","reverse","filter","el","_id","getPostsThunk","a","postAddThunk","editPostThunk","deletePostThunk","deletePostByIdDispatch","AuthReduxForm","reduxForm","onSubmit","handleSubmit","htmlFor","variant","minLengthForPassword","minLength","minLengthEmail","RegisterReduxForm","RedirectComponent","requiredField","value","maxLength","length","FormControl","children","touched"],"mappings":"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","file":"static/js/main.1b210fb4.chunk.js","sourcesContent":["import {loginAPI} from \"../api/API\";\n\nconst SET_REGISTER = 'SET_REGISTER'\nconst SET_AUTH_TRUE = 'SET_AUTH_TRUE'\nconst SET_AUTH_FALSE = 'SET_AUTH_FALSE'\nconst REDIRECT_FROM_REGISTER = 'REDIRECT_FROM_REGISTER'\nconst TOGGLE_REGISTER = 'TOGGLE_REGISTER'\nconst TOGGLE_REGISTER_SUCCESS = 'TOGGLE_REGISTER_SUCCESS'\nconst ERROR_TOGGLE_REGISTER_SUCCESS = 'ERROR_TOGGLE_REGISTER_SUCCESS'\nconst REDIRECT_FROM_REGISTER_FALSE = 'REDIRECT_FROM_REGISTER_FALSE'\nconst EXIT_ACCOUNT = 'EXIT_ACCOUNT'\nconst TOGGLE_AUTH = 'TOGGLE_AUTH'\nconst TOGGLE_AUTH_SUCCESS = 'TOGGLE_AUTH_SUCCESS'\nconst ERROR_TOGGLE_AUTH_SUCCESS = 'ERROR_TOGGLE_AUTH_SUCCESS'\n\nlet initialState = {\n  token: null,\n  userId: null,\n  isAuth: false,\n  isRegistered: false,\n\n  // Auth.jsx\n  toggleAuth: false,\n  toggleAuthSuccess: false,\n  errorToggleAuthSuccess: false,\n\n  // Register.jsx\n  toggleRegister: false,\n  toggleRegisterSuccess: false,\n  errorToggleRegisterSuccess: false\n}\n\n\nexport const authReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_REGISTER:\n      return {\n        ...state,\n        token: action.token,\n        userId: action.userId,\n        isRegistered: true,\n      }\n    case SET_AUTH_TRUE:\n      return {\n        ...state,\n        token: action.token,\n        userId: action.userId,\n        isRegistered: false,\n        isAuth: true\n      }\n    case REDIRECT_FROM_REGISTER:\n      return {\n        ...state,\n        isRegistered: true,\n        isAuth: true,\n      }\n    case REDIRECT_FROM_REGISTER_FALSE:\n      return {\n        ...state,\n        isRegistered: false,\n        isAuth: false,\n      }\n    case TOGGLE_REGISTER:\n      return {\n        ...state,\n        toggleRegister: true,\n        toggleRegisterSuccess: false,\n        errorToggleRegisterSuccess: false\n      }\n    case TOGGLE_REGISTER_SUCCESS:\n      return {\n        ...state,\n        toggleRegister: false,\n        toggleRegisterSuccess: true,\n        errorToggleRegisterSuccess: false\n\n      }\n    case ERROR_TOGGLE_REGISTER_SUCCESS:\n      return {\n        ...state,\n        toggleRegister: false,\n        toggleRegisterSuccess: false,\n        errorToggleRegisterSuccess: true\n      }\n    case TOGGLE_AUTH:\n      return {\n        ...state,\n        toggleAuth: true,\n        errorToggleAuthSuccess: false,\n      }\n    case TOGGLE_AUTH_SUCCESS:\n      return {\n        ...state,\n        toggleAuth: false,\n        toggleAuthSuccess: true,\n      }\n    case ERROR_TOGGLE_AUTH_SUCCESS:\n      return {\n        ...state,\n        toggleAuth: false,\n        toggleAuthSuccess: false,\n        errorToggleAuthSuccess: true,\n      }\n    case EXIT_ACCOUNT:\n      return {\n        token: null,\n        userId: null,\n        isAuth: false,\n      }\n    default:\n      return {...state}\n  }\n}\n\n\nconst registerDispatch = (token, userId) => ({type: SET_REGISTER, token, userId})\nconst authDispatchTrue = (token, userId) => ({type: SET_AUTH_TRUE, token, userId})\nexport const redirectFromRegister = () => ({type: REDIRECT_FROM_REGISTER})\nexport const redirectFromRegisterFalse = () => ({type: REDIRECT_FROM_REGISTER_FALSE})\nconst toggleRegisterDispatch = () => ({type: TOGGLE_REGISTER})\nconst toggleRegisterSuccessDispatch = () => ({type: TOGGLE_REGISTER_SUCCESS})\nconst errorToggleRegisterSuccessDispatch = () => ({type: ERROR_TOGGLE_REGISTER_SUCCESS})\nexport const exitAccountDispatch = () => ({type: EXIT_ACCOUNT})\nconst toggleAuthDispatch = () => ({type: TOGGLE_AUTH})\nconst toggleAuthSuccessDispatch = () => ({type: TOGGLE_AUTH_SUCCESS})\nconst errorToggleAuthSuccessDispatch = () => ({type: ERROR_TOGGLE_AUTH_SUCCESS})\n\nexport const registerThunk = (formData) => dispatch => {\n  dispatch(toggleRegisterDispatch())\n  return loginAPI.registerFromAPI(formData).then(response => {\n    if (response.status === 200) {\n      console.log(response.status)\n      let {token, userId} = response.data\n      dispatch(toggleRegisterSuccessDispatch())\n      dispatch(registerDispatch(token, userId))\n    }\n  }).catch(error => {\n    if (error.response.status === 400) {\n      dispatch(errorToggleRegisterSuccessDispatch())\n    }\n  })\n}\n\nexport const authThunk = (formData) => dispatch => {\n  dispatch(toggleAuthDispatch())\n  loginAPI.authFormAPI(formData).then(response => {\n    if (response.status === 200) {\n      let {token, userId} = response.data\n      dispatch(authDispatchTrue(token, userId))\n      dispatch(toggleAuthSuccessDispatch())\n    }\n  }).catch(error => {\n    if (error.response.status === 400) {\n      dispatch(errorToggleAuthSuccessDispatch())\n    }\n  })\n}\n\n\n","import * as axios from \"axios\";\n\n\nconst instance = axios.create({\n  baseURL: 'http://localhost:4000/api/',\n  withCredentials: true\n})\n\nexport const postsAPI = {\n  getPostsAPI(userId) {\n    return instance.get(`${userId}/posts`)\n  },\n  postAddAPI(userId, formData) {\n    return instance.post(`${userId}/set_post`, formData)\n  },\n  postByIdAPI(id) {\n    return instance.get(`post/${id}`)\n  },\n  editPostAPI(id,formData) {\n    return instance.put(`update_post/${id}`,formData)\n  },\n  deletePostAPI(id) {\n    return instance.delete(`delete_post/${id}`)\n  },\n}\n\nexport const loginAPI = {\n  registerFromAPI(formData) {\n    return instance.post('register', formData)\n  },\n  authFormAPI(formData) {\n    return instance.post('auth', formData)\n  }\n}","import {Field} from \"redux-form\";\nimport React from \"react\";\n\n\nexport const createFrom = (name, component, type, className, id, placeholder,validate ) => {\n  return (\n    <div>\n      <Field name={name} component={component}  type={type} className={className} id={id} placeholder={placeholder} validate={validate}  />\n    </div>\n  )\n}\n","import React from 'react';\nimport {FormControl} from \"./formControl/FormControl\";\n\nexport const Input = (props) => {\n  const { input, meta, ...restProps } = props;\n  return (\n    <FormControl {...props}>\n      <input {...input} {...restProps} />\n    </FormControl>\n  );\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\nimport {postsReducer} from \"../reducer/PostsReducer\";\nimport {composeWithDevTools} from \"redux-devtools-extension\";\nimport thunkMiddleWare from 'redux-thunk';\nimport { reducer as formReducer } from 'redux-form';\nimport {authReducer} from \"../reducer/AuthReducer\";\n\n\nconst reducerPack = combineReducers({\n  postsData: postsReducer,\n  authData: authReducer,\n  form: formReducer,\n})\n\nconst store = createStore(reducerPack,composeWithDevTools(applyMiddleware(thunkMiddleWare)))\n\nexport default store","import React from 'react';\nimport './Header.scss';\nimport { NavLink, withRouter } from 'react-router-dom';\n\nconst Header = props => {\n\tconsole.log(props);\n\treturn (\n\t\t<div>\n\t\t\t{props.location.pathname === '/' ? (\n\t\t\t\t<div className='header-block' style={{ backgroundImage: `url(${props.defaultImageURL})` }}>\n\t\t\t\t\t<div className='container'>\n\t\t\t\t\t\t<div className='header-block__overlay'>\n\t\t\t\t\t\t\t<div className='header-block__center'>\n\t\t\t\t\t\t\t\t<h1> Привет </h1>\n\t\t\t\t\t\t\t\t<h5>\n\t\t\t\t\t\t\t\t\t{' '}\n\t\t\t\t\t\t\t\t\tЭто простенький блог-сайт, добавь интересную историю о чем-либо, можешь прикрепить\n\t\t\t\t\t\t\t\t\tфотографию в ввиде ссылки на изображение в интернете, в дальнейшем я переработую эту\n\t\t\t\t\t\t\t\t\tтехнологию, но пока так){' '}\n\t\t\t\t\t\t\t\t</h5>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t) : (\n\t\t\t\tprops.postById && (\n\t\t\t\t\t<div className='header-block' style={{ backgroundImage: `url(${props.postById.imageURL})` }}>\n\t\t\t\t\t\t<div className='container'>\n\t\t\t\t\t\t\t<div className='header-block__overlay'>\n\t\t\t\t\t\t\t\t<div className='header-block__center'>\n\t\t\t\t\t\t\t\t\t<h1> {props.postById.title} </h1>\n\t\t\t\t\t\t\t\t\t<h5> {props.postById.description} </h5>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t)\n\t\t\t)}\n\t\t\t<div className='add_posts_content'>\n\t\t\t\t<div className='addPosts_button'>\n\t\t\t\t\t<NavLink to='/posts/edit'>\n\t\t\t\t\t\t<button type='button' className='btn btn-outline-secondary button_add_post'>\n\t\t\t\t\t\t\t{' '}\n\t\t\t\t\t\t\tAdd post\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</NavLink>\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<button className='btn btn-primary button_exit' onClick={() => props.exitAccountDispatch()}>\n\t\t\t\t\t\t{' '}\n\t\t\t\t\t\tExit\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default withRouter(Header);\n","import React from \"react\";\nimport Header from \"./Header\";\nimport {withRouter} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport {postsByIdThunk} from \"../../redux/reducer/PostsReducer\";\nimport {compose} from \"redux\";\nimport {AuthRedirectHOK} from \"../../redux/HOC/AuthRedirectHOK\";\nimport {exitAccountDispatch} from \"../../redux/reducer/AuthReducer\";\n\n\nclass HeaderContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.id = this.props.match.params.id\n  }\n\n  componentDidMount() {\n    let postId = this.props.match.params.id\n    this.props.postsByIdThunk(postId)\n  }\n\n  render() {\n    return (\n      <Header postById={this.props.postById} defaultImageURL={this.props.defaultImageURL} id={this.id}\n              userId={this.props.userId} exitAccountDispatch={this.props.exitAccountDispatch}/>\n    )\n  }\n\n}\n\nlet mapStateToProps = (state) => ({\n  postById: state.postsData.postById,\n  userId: state.authData.userId\n})\n\nHeaderContainer.defaultProps = {\n  defaultImageURL: \"https://images.unsplash.com/photo-1592912040837-5fc558fde862?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=755&q=80\"\n}\n\nexport default compose(connect(mapStateToProps, {\n  postsByIdThunk,\n  exitAccountDispatch\n}), withRouter, AuthRedirectHOK)(HeaderContainer)","import React from \"react\";\nimport {Spinner} from \"react-bootstrap\";\n\n\n\nexport const SuspenseComponent = (props) => {\n  return (\n    <div>\n      <Spinner animation=\"grow\" />\n    </div>\n  )\n}\n","import React from \"react\";\nimport {Redirect} from \"react-router-dom\";\n\n\nconst NotFound = () => {\n  return (\n    <Redirect to='/' />\n  )\n}\n\nexport default NotFound","import React, {Suspense} from 'react';\nimport './App.css';\nimport store from \"./redux/store/store\";\nimport {Provider} from \"react-redux\";\nimport {BrowserRouter, Route, Switch, withRouter} from \"react-router-dom\";\nimport {compose} from \"redux\";\nimport HeaderContainer from \"./components/header/HeaderContainer\";\nimport {SuspenseComponent} from \"./components/utils/suspense/SuspenseComponent\";\nimport NotFound from \"./components/notFound/NotFound\";\nimport {AuthRedirectHOK} from \"./redux/HOC/AuthRedirectHOK\";\n\n\nconst PostsListContainer = React.lazy(() => import('./components/postsList/PostsListContainer'))\nconst PostsFromContainer = React.lazy(() => import('./components/postsForm/PostsFromContainer'))\nconst PostEditContainer = React.lazy(() => import('./components/postEdit/PostEditContainer'))\nconst PostItemContainer = React.lazy(() => import('./components/postItem/PostItemContainer'))\n\nconst App = (props) => {\n  return (\n    <div>\n      <div>\n        <HeaderContainer/>\n      </div>\n      <div className=\"container\">\n        <Suspense fallback={<SuspenseComponent/>}>\n          <Switch>\n            <Route exact path='/' render={() => <PostsListContainer/>}/>\n            <Route exact path='/posts/edit' render={() => <PostsFromContainer/>}/>\n            <Route exact path='/posts/edit/:id' render={() => <PostEditContainer/>}/>\n            <Route exact path='/posts/:id' render={() => <PostItemContainer/>}/>\n            <Route path='*' render={() => <NotFound/>}/>\n          </Switch>\n        </Suspense>\n      </div>\n    </div>\n  )\n}\n\nconst AppContainer = compose(withRouter,AuthRedirectHOK)(App)\nconst MainApp = () => {\n  return (\n    <div>\n      <BrowserRouter>\n        <Provider store={store}>\n          <AppContainer/>\n        </Provider>\n      </BrowserRouter>\n    </div>\n  )\n}\n\nwindow.store = store\nexport default MainApp","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport './styles/App.scss'\nimport MainApp from './App'\n\nReactDOM.render(<MainApp />, document.getElementById('root'));\n\nserviceWorker.register();","import {postsAPI} from '../api/API';\n\nconst GET_POSTS = 'GET_POSTS';\nconst POST_BY_ID = 'POST_BY_ID';\nconst POST_ADD = 'POST_ADD';\nconst DELETE_POST = 'DELETE_POST';\n\nlet initialState = {\n\tposts: null,\n\tpostById: null\n};\nexport const postsReducer = (state = initialState, action) => {\n\tswitch (action.type) {\n\t\tcase GET_POSTS:\n\t\t\treturn {...state, posts: action.posts.reverse()};\n\t\tcase POST_BY_ID:\n\t\t\treturn {...state, postById: action.postById};\n\t\tcase POST_ADD:\n\t\t\treturn {...state, posts: [...state.posts, action.post]};\n\t\tcase DELETE_POST:\n\t\t\treturn {...state, posts: [...state.posts.filter((el) => el._id !== action.id)]};\n\t\tdefault:\n\t\t\treturn {...state};\n\t}\n};\nconst getPostsDispatch = (posts) => ({type: GET_POSTS, posts});\nconst postsByIdDispatch = (postById) => ({type: POST_BY_ID, postById});\nconst deletePostByIdDispatch = (id) => ({type: DELETE_POST, id});\n\nexport const getPostsThunk = (userId) => async (dispatch) => {\n\ttry {\n\t\tlet response = await postsAPI.getPostsAPI(userId);\n\t\tif (response.status === 200) {\n\t\t\tdispatch(getPostsDispatch(response.data));\n\t\t}\n\t} catch (e) {\n\t\tconsole.log('Error try again later');\n\t}\n};\nexport const postAddThunk = (userId, formData) => () => {\n\treturn postsAPI.postAddAPI(userId, formData);\n};\nexport const postsByIdThunk = (userId, id) => async (dispatch) => {\n\tlet response = await postsAPI.postByIdAPI(userId, id);\n\tif (response.status === 200) {\n\t\tdispatch(postsByIdDispatch(response.data));\n\t}\n};\nexport const editPostThunk = (userId, id, formData) => () => {\n\treturn postsAPI.editPostAPI(userId, id, formData);\n};\nexport const deletePostThunk = (id) => (dispatch) => {\n\treturn postsAPI.deletePostAPI(id).then((response) => {\n\t\tif (response.status === 'deleted') {\n\t\t\tdispatch(deletePostByIdDispatch(id));\n\t\t}\n\t});\n};\n\n// export const inputImageThunk = (fileImage) = dispatch => {\n//   return postsAPI.\n// }\n","import React from \"react\";\nimport {Form, reduxForm} from \"redux-form\";\nimport {createFrom} from \"../utils/forms/CreateForm\";\nimport {Input} from \"../utils/forms/component/Input\";\nimport \"./Auth.scss\"\nimport {Spinner} from \"react-bootstrap\";\n\n\nconst Auth = (props) => {\n  return (\n    <div className=\"container container_auth\">\n      <div className=\"login_h1\">\n        <h1> Entry in you blog </h1>\n      </div>\n      <div className=\"row justify-content-center\">\n        <div className=\"col-8\">\n          <form onSubmit={props.handleSubmit}>\n            <div className=\"form-group\">\n              <label htmlFor=\"exampleInputEmail1\"> Email address </label>\n              {createFrom(\"email\", Input, \"email\", \"form-control\", \"exampleInputEmail1\", \"your email\", [],)}\n              <small id=\"emailHelp\" className=\"form-text text-muted\">We'll never share your email with anyone\n                else.</small>\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"exampleInputPassword1\">Password</label>\n              {createFrom(\"password\", Input, \"password\", \"form-control\", \"exampleInputPassword1\", \"your password\", [])}\n            </div>\n            <div className=\"form-group form-check\">\n              {createFrom(\"checkbox\", Input, \"checkbox\", \"form-check-input\", \"exampleCheck1\", [], [])}\n              <label className=\"form-check-label\" htmlFor=\"exampleCheck1\"> Remember me </label>\n            </div>\n            <div className=\"buttons_auth_form\">\n              <div className=\"button_auth_form\">\n                <button type=\"submit\" className=\"btn btn-primary\"> Login</button>\n              </div>\n              <div className=\"register_button_in_auth\">\n                <button type=\"submit\" className=\"btn btn-primary\" onClick={() => {\n                  props.redirectFromRegister()\n                }}> Register\n                </button>\n              </div>\n            </div>\n          </form>\n          <div>\n            <div className=\"auth_spinner\">\n              {props.toggleAuth &&\n              <div>\n                <Spinner animation=\"grow\"/>\n              </div>\n              }\n            </div>\n            <div>\n              {props.toggleAuthSuccess &&\n              <div>\n                <div className=\"toggle_auth_success\">\n                  <span> Loading blogs account </span>\n                </div>\n                <div className=\"toggle_auth_success_spinner\">\n                  <Spinner animation=\"grow\" variant=\"success\" />\n                </div>\n              </div>\n              }\n              {props.errorToggleAuthSuccess &&\n              <div className=\"error_toggle_auth_success\">\n                <span className=\"error_toggle_auth_success_span\"> Email or password is not correct </span>\n              </div>\n              }\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst AuthReduxForm = reduxForm({\n  form: \"auth\"\n})(Auth)\n\nexport default AuthReduxForm","import React from \"react\";\nimport AuthReduxForm from \"./Auth\";\nimport {connect} from \"react-redux\";\nimport {authThunk, redirectFromRegister} from \"../../redux/reducer/AuthReducer\";\nimport {withRouter} from \"react-router-dom\";\n\n\nconst AuthContainer = (props) => {\n\n  let onSubmit = (formData) => {\n    props.authThunk(formData)\n  }\n\n  return (\n    <AuthReduxForm onSubmit={onSubmit} redirectFromRegister={props.redirectFromRegister} toggleAuth={props.toggleAuth}\n                   toggleAuthSuccess={props.toggleAuthSuccess} errorToggleAuthSuccess={props.errorToggleAuthSuccess}/>\n  )\n}\n\n\nlet mapStateToProps = (state) => {\n  return {\n    toggleAuth: state.authData.toggleAuth,\n    toggleAuthSuccess: state.authData.toggleAuthSuccess,\n    errorToggleAuthSuccess: state.authData.errorToggleAuthSuccess,\n  }\n}\n\nexport default withRouter(connect(mapStateToProps, {authThunk, redirectFromRegister})(AuthContainer))","import React from \"react\";\nimport {reduxForm} from \"redux-form\";\nimport {createFrom} from \"../utils/forms/CreateForm\";\nimport {Input} from \"../utils/forms/component/Input\";\nimport \"./Register.scss\"\nimport {Spinner} from \"react-bootstrap\";\nimport {minLength} from \"../utils/valodators/Valitators\";\n\nconst minLengthForPassword = minLength(8)\nconst minLengthEmail = minLength(5)\n\nconst Register = (props) => {\n  return (\n    <div className=\"container container_register\">\n      <div className=\"login_h1\">\n        <h1> Registration </h1>\n      </div>\n      <div className=\"row justify-content-center\">\n        <div className=\"col-8\">\n          <form onSubmit={props.handleSubmit}>\n            <div className=\"form-group\">\n              <label htmlFor=\"exampleInputEmail1\">Email address</label>\n              {createFrom(\"email\", Input, \"email\", \"form-control\", \"exampleInputEmail1\", \"your email\", minLengthEmail,)}\n              <small id=\"emailHelp\" className=\"form-text text-muted\">We'll never share your email with anyone\n                else.</small>\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"exampleInputPassword1\">Password</label>\n              {createFrom(\"password\", Input, \"password\", \"form-control\", \"exampleInputPassword1\", \"your password\", minLengthForPassword)}\n            </div>\n            <div className=\"form-group form-check\">\n              {createFrom(\"checkbox\", Input, \"checkbox\", \"form-check-input\", \"exampleCheck1\", [], [])}\n              <label className=\"form-check-label\" htmlFor=\"exampleCheck1\"> Remember me </label>\n            </div>\n            <div className=\"register_buttons\">\n              <button type=\"submit\" className=\"btn btn-primary\"> Register</button>\n              <button className=\"btn btn-primary\" onClick={() => {\n                props.redirectFromRegisterFalse()\n              }}> Back on Login\n              </button>\n            </div>\n          </form>\n          <div className=\"spinner_register\">\n            {props.toggleRegister &&\n            <div>\n              <Spinner animation=\"grow\"/>\n            </div>\n            }\n          </div>\n          <div>\n            {props.toggleRegisterSuccess &&\n            <div className=\"toggle_register_success\">\n              <span> Registration was success, enter your block through the login form </span>\n            </div>\n            }\n            {props.errorToggleRegisterSuccess &&\n            <div className=\"error_toggle_register_success\">\n              <span className=\"error_toggle_register_success_span\"> Some happened error, maybe it is user created or server is not working </span>\n            </div>\n            }\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst RegisterReduxForm = reduxForm({\n  form: \"register\"\n})(Register)\n\nexport default RegisterReduxForm","import React from \"react\";\nimport RegisterReduxForm from \"./Register\";\nimport {redirectFromRegisterFalse, registerThunk} from \"../../redux/reducer/AuthReducer\";\nimport {connect} from \"react-redux\";\n\n\nconst RegisterContainer = (props) => {\n\n  let onSubmit = (formData) => {\n    props.registerThunk(formData)\n  }\n\n  return (\n    <RegisterReduxForm onSubmit={onSubmit}\n                       toggleRegister={props.toggleRegister} toggleRegisterSuccess={props.toggleRegisterSuccess}\n                       errorToggleRegisterSuccess={props.errorToggleRegisterSuccess} redirectFromRegisterFalse={props.redirectFromRegisterFalse}/>\n  )\n}\n\nlet mapStateToProps = (state) => {\n  return {\n    toggleRegister: state.authData.toggleRegister,\n    toggleRegisterSuccess: state.authData.toggleRegisterSuccess,\n    errorToggleRegisterSuccess: state.authData.errorToggleRegisterSuccess\n  }\n}\n\nexport default connect(mapStateToProps, {\n  registerThunk,redirectFromRegisterFalse\n})(RegisterContainer)","import React from \"react\";\nimport AuthContainer from \"../../components/auth/AuthContainer\";\nimport RegisterContainer from \"../../components/register/RegisterContainer\";\nimport {connect} from \"react-redux\";\n\n\nexport const AuthRedirectHOK = (Component) => {\n  let mapStateToPropsFromRedirect = (state) => ({\n    isAuth: state.authData.isAuth,\n    isRegistered: state.authData.isRegistered,\n  })\n\n  class RedirectComponent extends React.Component {\n    render() {\n      if (this.props.isAuth && !this.props.isRegistered) {\n        return <Component {...this.props}/>\n      }\n      else if (!this.props.isAuth && !this.props.isRegistered) {\n        return <AuthContainer {...this.props}/>\n      } else if (this.props.isAuth && this.props.isRegistered) {\n        return <RegisterContainer {...this.props} />\n      }\n    }\n  }\n\n  return connect(mapStateToPropsFromRedirect, {})(RedirectComponent)\n}\n\n","\n\nexport const requiredField = (value) => {\n  if (value) {\n    return undefined\n  } else {\n    return \"Field is required\"\n  }\n}\n\nexport const maxLength = (maxLength) => (value) => {\n  if (value && value.length > maxLength) {\n    return `Max length is ${maxLength} symbols`\n  }\n  return undefined\n}\n\nexport const minLength = (minLength) => (value) => {\n  if (value && value.length < minLength) {\n    return `Min length is ${minLength} symbols`\n  }\n  return undefined\n}","import React from 'react';\nimport \"./FromControl.scss\"\n\nexport const FormControl = ({ input, meta, ...props }) => (\n  <div>\n    <div>\n      {props.children}\n    </div>\n    <div className=\"error\">\n      {meta.touched && meta.error && (\n        <span>\n          {meta.error}\n        </span>\n      )}\n    </div>\n  </div>\n);\n"],"sourceRoot":""}